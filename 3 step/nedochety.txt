J14	Тестирование
Разобраться с критериями для mock и stub
Разобраться более четко какие объекты нужно мокать/стабать, а какие не нужно.
Подробнее узнать про Spy, попробовать практическую реализацию интеграционных тестов
Разобраться с необходимостью моканья объектов в тестах, качеством покрытия кода юниттестами.
Разобраться лучше с критериями замены реального кода стабами/моками, разобраться лучше с критериями определения достаточности покрытия кода тестами.
Побольше бы попрактиковать в использовании моков и Mockito
Разобраться с критериями моканья ресурсов
Разобраться лучше с критериями замены кода стабами/моками в unit-тестах.
небольшие затруднения, как запустить тесты без maven, что еще есть кроме junit, не это не критично
Разобраться с концепцией "моков" и как создавать моки без различных библиотек вида Mockito, PowerMock и т.п. Посмотреть тему TestRunners и разобраться с разилчными способами запкска тестов.
Разобраться в чем отличие между стабом и моком.
Разобраться с тем как определяется необходимость моканья объектов.
Разобраться как реализовывать юнит-тесты для кода, который взаимодействует с базой данных.
Тестирование репозиториев БД, принцип отбора объектов для моканья
Подробнее поразбираться с интеграционным тестированием
Лучше разобраться с реализацией интеграционного тестирования с использованием MOCK.




J16	Логирование
Познакомится со сравнительной характеристикой разных библиотек и уметь рассказать о +/- той или иной
неправильно рассказал о иерархии логгеров, но в целом ок
Разобраться в отличиях создания логгера просто по строке и по имени класса: каким должен быть формат строки для имени и как это имя учитывается в конфигурировании.
Разобраться со способами как можно делать ленивый расчет аргументов строки сообщения лога, если данный уровень логгирования отключен.
Разобраться с преимуществами использования библиотеки SLF4J в качестве фасада для логирования. Разобраться в чем будет разница создания логгера по классу или просто по строке.
Logback layout.
Разобраться что такое Encoder, Layout в Logback.
Посмотреть, как можно "прятать" трудоемкий расчет параметров для сообщения лога, если текущий уровень логирования может быть отключен
Разобраться лучше зачем нужны Encoders и Filters в Logback.
Разобраться лучше какие преимущества дают системы логирования.
Разобраться с производительностью логирования. Логирование в многопоточных приложениях.
Почитать про булевские методы для проверки уровня логирования.
Посмотреть, как включать или выключать логгирование на уровне некоторых пакетов/классов. Также разобраться с использование LoggerFactory и какие есть способы получения объекта Logger. Посмотреть как делать "ленивое" логирование, учитывая что данный уровень логгирования может быть отключен.
Разобраться с Filters.
Пробел в знаниях по фильтрам. В остальном - хорошо.
Пробел в знаниях по фильтрам. В остальном - хороший уровень, обсудили потенциальные проблемы некорректного логгирования (интенсивные операции с диском, логгирование критических данных, расходование дискового пространства)
Разобраться с Filter в log4j.
Точно не понимает необходимость использования логеров в т.ч. в многопоточных приложениях.
Разобраться с причинами настройки разных уровней дебага и в каких случаях отладка приложения без логера невозможна.
Лучше разобраться с наследованием логирования. Разобраться с аспектами производительности приложения при логировании.
Подумать над всеми преимущeствами, которые даёт использование логеров.



J18	Time API (Java 8)
Разобраться что и где применять: Instant или ZonedDateTime, а так же плюсы и минусы. Рассмотреть как конвертировать типы из нового API в старое и обратно
Разобраться лучше с переводом дат из нового в старое API и наоборот, что такое ChronoUnit.
Разобраться с различием старой и новой даты и как перевести одно в другое
Разобраться лучше с интерфейсом Temporal.
Разобраться с переводом дат между старым и новым API.
Побольше попрактиковать с использовании классов и методов из TimeAPI.
Стоит изучить, как делать преобразования между старым java.util.Date и новыми LocalDate или LocalDateTime (в обе стороны).
И лучше еще побольше попрактиковаться в использовании java.time
Разобраться чуть лучше с работой с DateTimeFormatter.
Разобраться с Era, проблемами Time API 8
Нет понимания как работает Instant, Clock
Разобраться лучше зачем нужен класс Clock.
Плохо понимает преимущества использования Instant, Clock, затруднения с TemporalAccessor
Разобраться лучше зачем нужен Instant и ZoneId.
Разобраться лучше с отличиями между старым и новым API, разобраться с java.time.Clock, какие классы реализуют интерфейс Temporal.
Разобраться с java.time.Clock, лучше разобраться зачем был разработан новый time api и какие проблемы решает.
Разобраться лучше как переводить даты между старым и новым API.
Пробелы в знаниях по преобразованию объектов разных типов и некоторым конкретным методам API.
Разобраться с TimeZone, Clock их преимущества по сравнению с Calendar, MonthDay, Year, YearMonth, DateTimeFormatter
Разобраться подробнее с отличиями старого и нового API, какие новые возможности у Clock, Duration, Period и DateTimeFormatter.
Хорошие знания истории вопроса работы с датой и временем. Незначительные недочёты при рассмотрении предложенных практических примеров (учёт часовых поясов при обработке дат и времени создания сообщений в соцсети, проверка разницы между двумя датами)
Разобраться с фундаментальными проблемами java.util.Date и необходимостью появления java.time.Instant. Разобраться с пакетом java.time.chrono.
Разобраться зачем понадобился Instant, разобраться как можно преобразовывать даты между различными календарями.
Посмотреть методы сравнения LocalDate с другой датой.
Частично прошлые пробелы по методам использования были устранены, а частично еще остались пробелы по другим спрашиваемым методам (например, методы получения LocalDateTime из LocalDate) Также еще раз посмотреть алгоритм парсинга и форматирования дат из строки и обратно.
Разобраться как создавать LocalDate, LocalDateTime на какую-либо конкретную дату, и какие есть методы для проведения операций над датами, как ими пользоваться, как переводить даты из старого в новое API и наоборот.
Знание классов и их применение только на легком теоретическом уровне. А методы по созданию или манипуляциями над этими объектами не знает даже на приближенном уровне.
Затруднения с instant.
Разобраться зачем нужен Instant, разобраться как переводить даты из старого в новое АПИ и наоборот.
Небольшие пробелы в знаниях по манипуляциям с Temporal, Duration.of(...). В остальном - хорошо.
Разобраться с Clock, DateTimeFormatter. Не смог написать простую задачку по получению следующего понедельника.
Разобраться как получить дату следующего понедельника от текущей даты с помощью Time API, с классом Clock и подробнее почитать про форматтер дат.




J19	Пакет java.nio.
Разобраться с не блокирующимся вводом-выводом и причем здесь Channels, интерфейсом Watchable
Разобраться с блокировкой и производительностью при сравнени io VS nio
Лучше разобраться с WatchService, FileVisitor
Разобраться лучше с WatchService, EventObject и FileVisitor.
Посмотреть методы Files для чтения и записи в файл.
Для работы с каналами для записи в файл уже смог написать пример кодом. Описание работы через WatchService давал устно. На слух начало было похоже, но дальнейшие действия для получения изменений уже были не совсем так. Очень и очень скудно по методам утилитарного класса Files
Разобраться в чем отличие File и Files, разобраться, что можно делать с помощью утилитного класса Paths, разобраться как на практике использовать Channel, чтобы записать какие-то данные в файл.
Разобраться что blocking/non-blocking здесь относится к потокам выполнения, а не к ресурсам. Работа с каналами и буфферами только на теоретическом уровне. Как это кодом выглядит он не смог написать/рассказать. FileVisitor - нормально. Единственное, что ошибся с с тем, метод чего нужно вызывать для обхода. WatchService - почти никак.
Местами путаница с названиями методов Path, Files и Paths. Пробел в понимании завершения обхода дерева FileVisitor. Пробел в понимании того, что объект Path не обязательно соответствует физически существующему объекту файловой системы.
FileVisitor - плохо понимает WatchService - плохо понимает Класс Path. Утилитарные классы Files и Paths. - не помнит как создать экземпляр Path



J22	Java Concurrency
Разобраться лучше с RunnableFuture.
Поразбираться в логике работы Semaphore, CyclicBarrier и CountDownLatch. Сравнить поведение. В остальном вопрос расскрыт хорошо!
Подробные объяснения, виден хороший уровень понимания вопроса. Рекомендую почитать подробнее про CyclicBarrier




J23	Сервлеты/JSP
затруднения с: чтение body/вовзрат ответа, не знает где хранится http сессия, напутала про синтаксис jstl, как подключать кастомные тэги на странице но в целом ок
Поразбираться с JSP: возможности скриплет, выражений и объявление полей/методов. А также получше разобраться с извлечение значений из различных источников на стороне JSP (или же пробрасывание данных в JSP) без сервлетов.
Разобраться лучше с созданием сессии, разобраться лучше зачем нужны фильтры.
Разобраться с фильтрами: зачем они нужны и какие стандартные варианты их использовать. А также как фильтрами обрабатывать как запрос, так и ответ.
Разобраться когда инициализируется сервлет, посмотреть реализацию HttpServlet, JSP: разница между разными типами include, scope JSP, назначение тэга out. библиотека JSTL слабо
Разобраться лучше когда происходит init сервлета, разобраться в чем разница между директивой include и jsp:include, разобраться со скоупами jsp в чем разница со скоупами сервлетов, разобраться с возможностями тэга c:out.
Разобраться лучше, когда создается HttpSession.
Почти все прошлый пробелы были полностью устранены.
в целом ок, но немного напутал местами: как относятся потоки и сервлеты, как сделать через скриплеты итерацию (пример вывод таблицы), не смог объяснить что "под капотом" у таглиба (в частности jstl)
Сервлеты - хорошо. Разобраться как и когда создается сессия, а также как удалять сессию. Посмотреть для чего необходима сессия и какие именно данные обычно храняться.
JSP: разобраться с синтаксисом на примере вывода некоторого набора элементов в цикле через скриплет. Посмотреть директивы, их предназначение и синтаксис. Посмотреть как работают теги из JSTL или любые другие "кастомные" теги. Посмотреть EL (операторы и зарезервированные слова)
Разобраться в предназначении фильтров для обработки как запросов, так и ответов через них.



B5	Оптимизация производительности
Лучше разобраться с составными индексами.
Разобраться лучше с составными индексами, как они работают.
теоретические знания есть, немного хромает практическое применение, к тем же индексам пришлось подталкивать
Разобраться с принципом создания составного индекса, почитать дополнительно про команду EXPLAIN.
Посмотреть влияет ли порядок индексов и вывод EXPLAIN
Разобраться с созданием индексных выражений.
Разобраться с критериями создания и использованием составных индексов в запросе.
Разобраться влияет ли порядок условий в запросе на выполнение этого запросу СУБД и как создавать составные индексы по каким правилам, разобраться с использованием составных индексов при частичном совпадении колонок.
Разобраться с использованием индекса при частичном совпадении индекса с выражением в запросе
Умеет использовать explain, может выделить индексы. Рекомендуется уделить внимание деталям (составные индексы, в какой момент создавать индексы, случаи применения индекса - не только where)
Пробел в понимании особенностей использования составных индексов, кардинальности индексов
Разобраться как в составном индексе определять порядок колонок.
Теоретическая часть изучена нормально. Были некоторые замечания по практической части. Рекомендую детальнее изучить планы выполнения запроса (Execution Plan) и типы чтения в запросах с предикатами при наличии индексов.
Пробел в знаниях по задействованию индексов различными SQL-конструкциями, по порядку столбцов в составных индексах.
Теоретическую часть изучил хорошо. Но есть проблемы с пониманием как применять теоретические знания на практике. Для закрепления материала предлагаю с моей помощью проделать практические упражнения по оптимизации запросов на проекте art-sport.
Разобраться в отличиях и преимуществах различных типов индексов между собой. Разобраться получше с типами операций в плане запроса и разницей работы и производительности этих типов.
Основные понятия не раскрыты.
Изучить темы:
    Query Processing Architecture Guide https://docs.microsoft.com/ru-ru/sql/relational-databases/query-processing-architecture-guide
    SQL Server join operators https://www.youtube.com/watch?v=QV5CYsjkzqw
    Showplan Logical and Physical Operators Reference https://docs.microsoft.com/ru-ru/sql/relational-databases/showplan-logical-and-physical-operators-reference
    Hints (Transact-SQL) https://docs.microsoft.com/ru-ru/sql/t-sql/queries/hints-transact-sql
    SQL Server Statistics https://www.sqlshack.com/sql-server-statistics-and-how-to-perform-update-statistics-in-sql/ https://docs.microsoft.com/ru-ru/sql/t-sql/statements/update-statistics-transact-sql
    Index fragmentation and rebuild https://docs.microsoft.com/ru-ru/sql/relational-databases/indexes/reorganize-and-rebuild-indexes
Поразбираться с оптимизацией view, созданием многоколончатых индексов.
Разобраться в каком порядке нужно добавлять колонки в индекс с несколькими колонками
Проблемы с порядком столбцов в запросах при использовании составных индексов. В остальном - хорошо.
Поупражняться в чтении планов с целью оптимизации разных запросов.
заминка с профилированием медленных запросов, cardinality, первичный ключ (индексация ключа), constrains
Разобраться как выбрать запросы для оптимизации. Разобраться со стоимостью запроса, количеством записей для чтения и типом чтения данных (физический/логический). Разобраться с индексацией первичного и внешнего ключа. Разобраться со структурой индексов, типов данных в узлах, хэширование.
Разобраться где взять запросы для оптимизации и как из этой массы выбрать те которые требуют оптимизации в первую очередь. Разобраться cardinality и ее роль в написании индексов.
разобраться как найти запросы, которые нужно оптимизировать, разобраться как правильно создавать составные индексы в зависимости от cardinality



W5	Продвинутый CSS
Изучить темы "миксов" в БЭМе.
Разобраться лучше с контекстными селекторами, разобраться лучше с предназначением методологий BEM и Atomic CSS.
Разобраться со смыслом методологий CSS? для чего они нужны и какие проблемы решают
Некоторые проблемы с селекторами, дочерние/сестренские/по атрибутам. Методология БЭМ объяснялась путано, приходилось ответы выуживать. Правила формирования имени БЭМ-сущности и почему это делается так а не иначе выяснить было сложно, объяснения были мутные. Нужно лучше разобраться с БЭМ
Лучше разобрать в соседних и дочерних селекторах, так же посмотреть вариации селектора по атрибуту. Разобраться в БЭМ.
Ознакомиться с псевдоклассами, особенностями использования (в т.ч. last-child). Методологию БЭМ требуется перечитать и попробовать сделать что-то практически
Разобраться с определением, к каким элементам(относительно других элементов) применяются псевдоклассы :last-child и :first-child.
Разобраться с сокращенной запись #HEX цвета
Также повторить тему вопроса W4. Основы CSS по вопросу расчета специфичности и веса селекторов.
Поразбираться с плюсами и особенно минуса внедрения методологии в разработку.
Разобраться со специфичностью, порядком применения псевдоклассов (last-child), разницей .className.className и .className .className,
Поставил бы оценку ниже, если бы не Java как основная технология. display – очень важное свойство, а это все-таки «Продвинутый CSS». Также в современном мире нужно знать про Flexbox и Grid Layout
Запутался в контекстным селектором. До конца доразбираться со свойством position и как работают значения absolute и relative
Разобраться с viewport. Дополнительно проработать тему абсолютных и относительных величин. К сожалению не задали вопросы по селекторам...
Запутался в БЭМ. Наводящие вопросы (примеры) помогли
Изучить, какие есть псевдоэлементы(селекторы) и как и для чего их можно использовать
Разобраться с определением приоритета и расчетом специфичности селекторов, включая псевдоклассы и псевдоэлементы (прошлая тема W4 уже забывается).
Рекомендуется прояснить:Приоритет файлов css/<style>
Побольше бы практического опыта верстки по BEM.
Не было знаний доволе часто используемых величин измерения rem vh vw. Также отсутвие каких-то минимальных практических навыков по гейсфулл дегродейшн, хотя в теории есть понимание, а практически распознать или написать нет. Практике БЕМ также храмала.
Забыл про альфа-канал в хекс-нотации.
Немного плавал синтаксис БЭМ, можно подробнее посмотреть преимущества использования методологий и задание цветов hsla
Значений стилей - хорошо. Похоже, что есть некоторое недопонимание контекстного селектора, как на примере двух классов - с пробелом и без. Также надолго залип с написание селекторов атрибута. Методогия BEM: рассказал о концепции блок-элемент-модификатор и о том, как именно это именовать. Но по решению предоставленного задания оказалось, что для него навешивание всех этих классов на элементы нужно для того.... чтобы на элементах были классы. Классы просто будут говорить о сути элемента. И чтобы потом в других местах можно было переиспользовать эти классы.
Местами путанные ответы. Общая теоретическая база есть, но на практике обнаружились проблемы в описании селекторов. Методологии CSS требуют изучения.
Проблемы:
    Понимание шестнадцатеричной записи цветов.
    Значения text-align
    Расположение элементов с разными значениями position
    Формирование имен классов по БЭМ в практическом примере с формой и её элементами. Выяснились и фундаментальные пробелы в понимании принципов БЭМ из-за недостатка опыта.
Необходимо уделить внимание особенностям управления цветом (HEX-форма), более внимательно ознакомиться с методологией БЕМ, закрепить приобретенные навыки практически
Небольшие пробелы по hsla, с селекторами в целом норм (проблема с применением :first-child). Упомянул порядком методологий, рассказал про amcss, но проблемы с БЭМ (миксы, модификаторы ключ-значение)
Уточнить, от чего отталкиваются значения em и rem. И побольше бы опыта работы с методологией (на примере BEM).
Задание цветов - хорошо. Размеры - перечислил только часть, не понимает работу некоторых типов. Использует неправильный способ расчета специфичности: где-то почитал очень простой алгоритм, который не совсем правильный, но для тривиальных случаев работает. Свойством position не знает как пользоваться. Методологии поверхностно. Затронули на примере BEM, но в оформлении и именовании классов не очень разобрался.
В целом вопрос раскрыт, однако в сущности методологии БЭМ не хватает ключевых понятий и практики, также рекомендуется разобраться со способами позиционирования
Были небольшие неточности в ответах по CSS-свойствам и селекторам, а также небольшая ошибка в BEM-классах, но в целом очень хорошо.
Ошибки в приоритетах селекторов. В остальном хорошо. Были рассказаны подробности сразу нескольких методологий.
Рекомендуется больше практики, уделить внимание позиционированию, потокам
Очень поверхностно разобрался в БЭМ. Разобраться лучше в общей идее и методологии заложенной в БЭМ, принципах (Разделение кода на части, Принцип единственной ответственности, Принцип открытости/закрытости, DRY)
частично присутствовал, из того что слышал-в целом всё ок
глянуть сокрытие элемента display/visibility, :not(selector), :first-child/last-child в бэме с модификатором подсказка, в целом ок - селекторы рассказаны и показаны подробно
Разобраться со свойтвом position, единицами измерения em и rem
Продемонстрированы навыки использования псевдоклассов/элементов, установки значений для правил, в т.ч. цвета, описаны принципы верстки по BEM.
Вместе с тем необходимо уделить внимание на расчет специфичности правил, позиционирование, относительные величины em/rem
На все вопросы были получены развернутые ответы. Рекомендую почитать о других методологиях CSS, кроме БЭМ.
Тему рассказал, приводил примеры элементов CSS стилей и их значений, а также ответил на дополнительные вопросы.
Проблемы с селекторами (атрибутов, группировка), нет понимания псевдо-элементов, есть нюансы по БЭМ, проблемы с em
Не знает: псевдоэлементы и псевдоклассы, комбинированные селекторы; значения свойства position. BEM: поверхностно только. Больше знает как именовать, но не как использовать и переиспользовать блоки и элементы.
Пробел в понимании RGB-кодирования цветов
Кроме Методологии CSS – ушел на митинг с заказчиком



W7	Продвинутый JavaScript
Дата - как она сериализуется браузером, что важно для взаимодействия с бэком
Для Java разработчика очень неплохо. Из недочетов – нужно разобраться, как работает прототипное наследование. И запомнить, что контекстом является объект перед точкой, только при немедленном вызове соотв. метода.
Посмотреть способы преобразования строки в число и разницу их работы. Замыкания нормально, но почти никак с теоретической частью по "лексическому окружению". Разобраться в разнице значений в "event.target" и "event.currentTarget".
Объекты - поупражняться с ключами (+вычисляемые поля).
setTimeout - разобраться с сигнатурой + связь с контекстом.
Контекст вызова - слабовато, необходимо на примерах разобраться.
Обработка событий. Отмена действия по умолчанию - разобраться на практике. Научиться управлять фазой обработки события
На мой взгляд, основные темы были раскрыты, хоть местами и не до конца уверенно
Нужно разобраться с переводом строк в числа, датами, объектами (ключи). Замыкания и Лексическое окружение разобрать в девтулз, разобраться с методами работы с контекстом. События, способы назначения, сигнатуры методов и устройство объекта события перечитать
Строки, числа, даты - были погрешности, но сойдет. Посмотреть работу со свойствами объекта и что происходит при использовании не строковых значений в качестве ключей. С замыканиями возникли трудности в объяснении терминов. Контекст выполнения this - появление/потеря вроде нормально, однако на менее примитивных примерах уже возникли трудности. Также необходимо доразбираться с использованием методов переопределения контекста. События - доучить.
Посмотреть Object.create(), приведение типов, значения в массиве при создании массива заданной длины, массивы с дробными индексами. Большую часть вопроса не поднимали
По началу плавала, но в целом для непрофильного JS нормально. Объекты - посмотреть приведение объекта к строке, подробнее про дескрипторы свойств; Массивы - вызов конструктора c одним аргументом '125', '1.25'; Строки - отличия substring, slice; Числа - округление до заданной точности, toFixed();
Необходимо лучше разобраться в конструкторах объектов, вычисляемых свойствах объекта. Посмотреть разницу работы в методах поиска подстроки (что-то есть но нужно обобщить знания). Разобраться в методах типа Number (и объекта Math). Было бы неплохо почитать про каррирование функций. По ивентам все хорошо.
Функции работы со сложными структурами знает только в теории, замыкания не понимает
Поглубже бы и побольше изучить встроеные методы, объектов, массивов, строк и чисел
Objects - посмотреть Object.create(); Array - посмотреть аргументы new Array(); Date - с небольшими подсказками норм; String - посмотреть различия substr, substring, slice; Number - нормально; Замыкания - хорошо; this - хорошо; События - хорошо
Небольшие проблемы по аргументам Array() и дескрипторам. На DOM пришлось отключиться. Для не JS-ника нормально
Опять же практическое применение знаний. Хотелось бы чтобы работа с событиями была проделана практическая большая.
Поглубже разобраться в числовом типе данных: размерность и максимальные/минимальные значения; суть значений *_SAFE_INTEGER и на что это влияет. Также посмотреть разницу между преобразованием строки в число(унарный плюс или через функцию Number) и использованием функции parseInt. Замыкания: хорошо. Но для теории всё же стоит разобраться в терминах "Lexical Environment" и "Scope", а не просто "функция запоминает эту переменную". Остальное - хорошо.
Есть некоторые сложности с пониманием устройства типа Number (диапазон значений целочисленных/вещественных, что происходит при переполнении, как работает преобразование строки в число), а так же с пониманием лексического окружения. Так же были некоторые сложности на практических задачках по контексту выполнения, но по итогу со всем разобрались.
Разобраться с созданием объектов, инициализацией массивов. Много мелких ошибок и неточностьей
Мелкие проблемы по аргументам new Array(), методам строк, NaN
Легкие проблемы с методами строк (проверка наличия подстроки, замена) и массивов (вовзращаемое значени callback функции filter). Не знал про создание объекта при помощи Object.create. В остальном норм
Понадобились наводящие вопросы про кодировки и иммутабельность строк. Пробелы в знаниях по некоторым методам Date.
Все неплохо, показал, что умеет пользоваться сложными объектами, DOM'ом, событиями. Лексическое окружение - все концепутально верно.
С большего оставшиеся вопросы подтянул. Надо почитать про this стрелочных функций и практические задания по this повыполнять, так же посмотреть как работает Object.freeze
В основном прошлые пробелы были устранены. Хотя всё еще остались некоторые проблемы с массивами и по работе с установкой контекста функций.
Проблемы с именами свойств объектов, не знает аргументы new Array, проблемы с методами массивов (filter, map), строк (substr, substring, replace, join). Замыкания +, this -, манипуляция с DOM +, события +
Объекты - разобраться, что же может быть ключом (какой тип данных). Массивы - сойдет по работе с методами добавления/удаления данных вырезания подмассива; очень плохо с методами перебора .map(), .filter(), .reduce() и .forEach(). Строки - методы строк почти не знает. Замыкания - хорошо. Контекст выполнения - не понимает, когда у функции есть this, откуда берется и когда он теряется. Манипуляции с DOM - хорошо События и объект event - хорошо.
Пробелы:
    как программно различить массив и объект
    как вывести число с заданным количеством знаков после точки
    как преобразовать строку к числу
в целом ок, небольшие пробелы в практике (toFixed,parseInt/Float) но при этом понимание есть
Были проблемы с реальным применение .call/.apply и мелкие проблемы с базовыми заданиями
Сложные структуры: нормально Замыкания: хорошо. DOM: нормально Контекст выполнения: нормально События: хорошо



T1	Командная оболочка CMD (Windows)
Разобраться 1) выполняемые файлы и их различие 2) как просмотреть содержимое текстового файла, more 3) команда set/setlocal, start/cmd, copy/xcopy, устройства con/prn/nul 4) внешние и встроенные команды
Более глубоко изучить основные команды, различать внутренние и внешние команды. Ознакомиться с переменными окружения, количеством параметров в пакетных файлах. Изучить как завершить процесс по идентификатору. Изучить работу с консолью.
    Разобраться в отличиях: bat vs cmd
    echo - поработать с примером конкатенации и параметризации строки
    Разобраться с поиском процессов по фильтру
перемещение между дисками
Разобраться лучше с форматами исполняемых файлов в CMD и с передачей параметров в bat-файл, разобраться лучше с командой set.
Разобраться с 1) типами выполняемых файлов и порядком их исполнения 2) передачей параметров в bat/cmd 3) set/setlocal 4) echo
Можно поглубже разобраться в синтаксисе и возможностях использования BAT-файло, работа с аргументами запуска, переменными среды.
Разобраться с поиском процессов по фильтру, а также завершение нескольких процессов через taskkill по определенной критерии выборки.
Как посмотреть содержимое файла.
Получше поразбираться с переменными среды, а также с их использованием вместе с локальными переменные в пакетных файлах.
Посмотреть ситаксис параметра фильтрации для tasklist.
Разобраться лучше с командой copy и отличием от xcopy, разобраться как создать новый файл, разобраться с типами исполнямых файлов в CMD, как считать параметры внутри bat-файла, разобраться лучше с переменными окружения.
Разобраться 1)как копировать на устройства, 2)чем отличается copy от xcopy 3) как рекурсивно удалять файлы 4) как создать файл 5) какие файлы являются выполняемыми и чем они различаются. 6) чем отличаются start и cmd 7) как считать параметры командной строки 8) Чем отличается set ot SETLOCAL 8) что такое @ 9) Для чего широко используется в пакетных файлах GOTO
запуск батника с параметрами
Разобраться как передать в bat-файл различные параметры и прочитать их в bat-файле.
Разобраться: start/cmd, переменные окружения в пакетных файлах, вызов другого пакетного файла из пакетного файла без call? как прибивает процессы taskkill
Разобраться с типами исполняемых файлов, SET (выводом/модификацией переменных окружения), taskill /f
Почитать про отличие встроенных и внешних команд, команда REN и MOVE, CMD и START – отличия
    Часто используемые команды – dir, type, echo, set, call, start, cmd и т.д.
    Передача параметров в пакетные файлы
    Перемнные окружения
Требуется более глубокое изучение материалы по данной теме.
Поразбираться с SET и SETLOCAL, какие файлы являются запускаемыми
Разобраться с setlocal и как узнать дату-время и версию ОС в CMD.
Разобраться с start/cmd, переменными окружения, типами исполняемых файлов, лучше разобраться с xcopy, more, ipconfig
вначале существенная заминка с отличием cms/start/ и переменными окружения потом ок,
почитать ipconfig
Хорошо, если что и не знает, то знает, как получить справку по нужным аргументам
Назвали как выводить процессы, а как с ними работать - нет.
Замечание есть только по работе с процессами. Пока только на уровне знания имен комманд. Стоит разобраться как их использовать с различными аргументами и флагами.
Разбираться с командной оболочкой с самых основ!
Разобраться с 1) dir 2)типам исполняемых файлов 3) просмотр файлов 4)удаление директориев 5)переменые окружения
Почитать more, find
детальнее посмотреть работу с файлами
Разобраться с: wildcard для DIR, выбор диска, уточнить работу call
Разобраться как фильтровать спиcок файлов в команде dir, как перейти на другой диск.
Разобраться с переходом по дискам. Разобраться с запускаемыми файлами типа COM, CMD, BAT. Команды start, CMD. Разобраться с set и изменением переменных окружения
type | more, пробелы по исполняемым файлам
Рекомендуется почитать про использование более 10 параметров в пакетных файлах, про выполнение одного пакетного файла из другого.
Разобраться как вывести содержимое текстового файла.
Требуется больше практики в написании пакетных файлов, использовании ветвлений в скрипте, переменных.
Пробелы: rename
Проблемы с taskkill, минимальные пробелы по работе с файлами (rename)
Разобраться с: more, SET vs SETLOCAL, CMD vs START
Отличия между SET и SETLOCAL в пакетном файле и между Сmd и Start.
Разобраться с
    переменными окружения - очень слабо
    SET, SETLOCAL
    Разобраться с DIR, START, CMD
Разобраться какое количество входных параметров может быть для bat-файла, разобраться с переменными окружения, как создать новый файл в cmd.
Разобраться как удалять директории в CMD Windows
Разобраться: команда NET переменные окружения (критично) с передачей более 9 параметров в пакетный файл, setlocal.
Хорошо. Можно еще разобраться с параметров /fi для tasklist и taskkill, а также посмотреть синтаксис сложных конструкций в .bat файлах
на назвал фильтры для выборки
Хороший уровень. Посмотреть, как получить информацию о сетевых интерфейсах и подключениях.
Разобраться с командами netstat и ipconfig.
Не знал xcopy, мелкие недочеты
Разобраться с CMD и START, SC, NET
Проблемы с процессами, CMD vs START, небольшие замечания по созданию файлов



T2	Командная оболочка Bash (Linux)
Разобраться лучше с ключами kill.
Разобраться лучше как посмотреть и изменить права доступа для файла.
Попробовать команды на практике. Разобраться с тем как выяснить что файл исполняемый и как исполняемым.
    Разобраться с параметрами команды KILL
    shebang для чего используется?
    Еще раз повторить разделение прав: владелец, группа, все остальные. Назначение группы пользователю.
Разобраться с переменной PATH.
Разобраться с PATH: что хранит в себе и зачем эта переменная окружения нужна. Разобраться с командой копирования файлов cp. Небольшая путаница с поиском файла и в понимании назначения команды grep.
почитать про поиск файлов
Разобраться лучше с командами удаления/копирования файлов, разобраться лучше с параметрами chmod, разобраться с переменными окружения.
Разобраться с 1) ключами KILL 2) исполняемыми файлами и ключами 3)заданием переменных окружения
Разобраться с правами доступа и владельцами, с запуском sh, работой с параметрами, процессами, а так же с комбинированием команд. Познакомится с опциями, которые используют эти команды
Разобраться с командой ls. Какие есть аргументы, а также разобраться со всеми данными, отображаемые при списочном выводе.
Рассмотреть различные варианты запуска файла на выполнение из под оболочки, а также на какие варианты влияет "шебанг" внутри всриптового файла. Разобраться с чтением аргументов команды из скриптового файла; использованием локальных переменных и переменных среды.
Разобраться с привилегиями для файлов и папок: как посмотреть текущие, как поменять, как добавить возможность запуска на выполнение.
Как посмотреть права файла. Более глубоко изучить chmod.
Получше разобраться с запуском файлов на выполнение.
Разобраться с правами доступа к файлам/папкам: как посмотреть, какие части за что отвечаеют, как поменять и какие есть способы для задания тех или иных прав.
Изучить виды сигналов процессам.
На будущее: изучиться использование конвейерных команд, в частности more, grep и т.п.
Разобраться лучше с параметрами команд cd и ls, разобраться с параметрами команды kill, разобраться лучше с переменными окружения, с командой grep.
Разобраться 1) со структурой каталогов Linux и как по ним перемещаться 2) параметрами ls 3) команда kill и ее параметры 4) команда set и ее отличие от declare и от set в cmd 5) параметрами grep
Разобраться с параметрами команды cd, разораться с параметрами kill, разобраться как передать в sh-скрипт различные параметры и потом их использовать внутри sh-скрипта.
Лучше разобраться с kill
Разобраться лучше с параметрами команды ls.
работа с chmod, перенаправление потоков вывода
Поразбираться с ls, kill
Разобраться как посмотреть список файлов в директории по начальной букве названия, разобраться с ключами kill.
немного запутался с правами на исполнение chmod и способами запуска sh скриптов, но потом исправился
./script.sh, grep
Все хорошо. Не знал про where, но в целом знании довольно глубокии
повторить перенаправление вывода.
Числовое представление прав
Посмотреть работу с ограничением вывода большого количество строк: команды less/more и head/tail. Получше разобраться с использование grep в конвейерных операциях.
Пакетные файлы: разобраться со первой строкой (шебанг) и ее предназначением.
посмотреть как работает конвейер, пути к файлам (. ~)
Разобраться с ls, ~, /
Разобраться какие директории ~ и /
Разобраться с ls.
Разобраться с фильтрацией файлов по ls
Немного поразбираться с ls
В целом нормально. На основные вопросы ответила Желательно повторить работу с процессами и перенаправление ввода-вывода.
Проблемы с пайпами, была путаница с dir в начале, небольшие проблемы с правами
Посмотреть синтаксис .bat-файлов: работа с переменными, управляющие конструкции, вызов других исполняемых или пакетных файлов.
Разобраться, что за директория / и какие параметры у команды ls, как проверить запущен ли определенный процесс. Разобратьяс как перезагрузить машину из командной строки.
Разобраться с типами диреторий и их нахождением. Разобраться с ls, как выяснить исполняемый ли файл или нет, ps, сигналы kill
Разобраться как посмотреть список процессов, разобраться с параметрами команды cd, как передавать и обрабатывать параметры в пакетном файле, как работать с переменными окружения, как работать с условиями и циклами в шелл-скриптах.
cd - разобраться с доп. символами . .. - и ~ . Разобраться с командами вывода содержимого файла. Аргументы команды ps, а также сигналы для завершения процесса. Разобраться с разницей между find и locate. И очень плохо было с пакетными файлами (запуск файла с аргументами, синтаксис внутри bash-файла)
Разобраться с ls, kill
проверка наличия файла через "ls filename', сигналы для kill полцесса, есть практические навыки
Пробел в понимании разрешений для пользователя и группы. В остальном - хорошо.
Достаточно подробно и самостоятельно рассказал все основные моменты, есть некоторые сложности с пониманием настроек прав доступа.
Разобраться как поменять владельца файла, как установить переменную окружения, как посмотреть какие сетевые интерфейсы есть на машине.
Посмотреть способы запуска файла на исполнение. Разобраться с командой chmod через цифры. Посмотреть команду chown. Изучить работу с переменные(локальными и системными) через терминал или в пакетных файлах.
Неполное понимание принципов работы разрешений. По командам - хорошо.
Продемонстрированы навыки работы в командной оболочке. Рекомендуется уделить внимание правам доступа
Довольно много путаницы и мелких ошибок. Разобраться с grep.
Не вспомнил про grep, проверку существования файла через ls. Проблемы с обязательностью параметров, проблемы с получением текущей директории, небольшие проблемы с правами доступа
Не смог назвать команду поиска файла по имени в текущей директории. Некорректно назвал процессы потоками. В остальном - продемонстрированы хорошие знания.
Продемонстрированы навыки работы с файлами/директориями, освещены некоторые способы перенаправления потоков i/o. В ходе собеседования уяснены особенности работы со скрытыми и исполняемыми файлами.
Рекомендуется разобраться с пакетными файлами и передачей аргументов, атрибутами файлов, а также получить представление о группах и владельцах
Вопрос закрыт в полной мере.
kill -9

Pwd
File

If, for, while
top

Demon

-x
Цвет \xyyy
Batch
Как удалить все из папки, а папку оставить
mklink


T4	Регулярные выражения
Разобраться лучше с ревнивой квантификацией и с использованием групп.
Разобраться с группировкой
Рекомендуется еще раз посмотреть на задачу по валидации значения цвета (строго либо #xxx, либо #xxxxxx)
Разобраться как работать с национальными символами (иероглифы), лучше разобраться с отличием жадного и сверхжадного квантификатора на примерах
повторить жадный и ленивый поиск, группы
В теории всё хорошо, но на практике были проблемы c квантификацией скобочных групп
Местами путался по символьным классам, но после замечаний сам исправлялся, флаг g
посмотреть группирование и как с ним работать
Разобраться с ревнивой квантификацией.
Разобраться с ревнивым квантификатором
Были небольшие проблемы с применением квантификаторов к скобочным группам
Достаточно хорошо знает теорию, с практической задачкой были трудности, с подсказками справился. Рекомендуется обратить внимание на группировку, а так же порешать задачки для наработки практики.
Разобраться с 1) группировка 2)модификаторы 3)диапазоны
Знает основные возможности регулярных выражений, были сложности с группами и диапазонами. Так же рекомендуется ознакомиться с модификаторами регулярных выражений, в том числе и как они выглядят в .NET
Владеет синтаксисом регулярных выражений, умеет применять на практике
Небольшие заминки при решении практического примера
разобрали много примеров, незначительная подсказка что можно упрощенно писать повторение {4,4}->{4} по теории всё ок
Разобраться чуть лучше с разницей между ленивой, жадной и сверхжадной квантификацией.
Ответ более чем полный. Справился со сложным примером.
Понадобились наводящие вопросы при решении одного из примеров: регулярное выражение для проверки номера банковской карты формата XXXX-XXXX-XXXX-XXXX. Знание синтаксиса регулярных выражений хорошее.
Разобраться с назначением и использование групп в регулярных выражениях
В целом - хороший уровень. Практические примеры решены. Иногда были необходимы наводящие вопросы.
Ответил на все вопросы практически без затруднений. Рекомендуется обратить внимание на именованные группы.
все отвечено, разобрали примеры, попутно уточняя нюансы
Посмотреть флаги.
Теория - хорошо. В практическом примере понадобились подсказки.
Возникли проблемы с практическим примером с группировками. Второй практический пример (более простой) был решен.
Были затруднения с конструкциями группировки в регулярных выражениях
Не вспомнила спецсимволы указывающие на начало и конец выражения.
ленивый и жадный поиск
повторить группы и ленивый поиск
